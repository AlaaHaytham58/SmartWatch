


ARM Macro Assembler    Page 1 


    1 00000000 40010808 
                       GPIOA_IDR
                               EQU              0x40010808
    2 00000000         
    3 00000000 40010800 
                       GPIOA_CRL
                               EQU              0x40010800
    4 00000000 40010C08 
                       GPIOB_IDR
                               EQU              0x40010C08
    5 00000000 4001080C 
                       GPIOA_ODR
                               EQU              0x4001080C
    6 00000000 40021000 
                       RCC_APB2ENR
                               EQU              0x40021000
    7 00000000 40021000 
                       RCC_APB1ENR
                               EQU              0x40021000
    8 00000000 40000000 
                       TIM2_ARR
                               EQU              0x40000000
    9 00000000 40000028 
                       TIM2_PSC
                               EQU              0x40000028
   10 00000000 40000000 
                       TIM2_DIER
                               EQU              0x40000000
   11 00000000 40000000 
                       TIM2_CR1
                               EQU              0x40000000
   12 00000000 40000000 
                       TIM2_SR EQU              0x40000000
   13 00000000 40021000 
                       RCC_CR  EQU              0x40021000
   14 00000000 40021000 
                       RCC_CFGR
                               EQU              0x40021000
   15 00000000 40022000 
                       FLASH_ACR
                               EQU              0x40022000
   16 00000000         
   17 00000000                 AREA             Bolum3, CODE, READONLY
   18 00000000                 THUMB
   19 00000000                 EXTERN           TIM2_IRQHandler
   20 00000000                 EXPORT           _main
   21 00000000         _main
   22 00000000         ;GPIO A CLOCK ON
   23 00000000 4A30            LDR              r2,=0x20000260
   24 00000002 F04F 0004       MOV              r0,#0x04
   25 00000006 4930            LDR              r1,=RCC_APB2ENR
   26 00000008 6188            STR              r0,[r1,#0x18]
   27 0000000A         ;  pa3 out
   28 0000000A F44F 5040       MOV              r0,#0x3000
   29 0000000E 492F            LDR              r1,=GPIOA_CRL
   30 00000010 6008            STR              r0,[r1,#0x00]
   31 00000012         ;*******************************************************
                       **********************CLOCK CONFIGURATION 72MHZ       
   32 00000012         ;1014:     FLASH->ACR |= FLASH_ACR_PRFTBE; 



ARM Macro Assembler    Page 2 


   33 00000012         ;1015:  
   34 00000012         ;1016:     /* Flash 2 wait state */ 
   35 00000012 482F            LDR              r0,=FLASH_ACR ; @0x080002D4
   36 00000014 6800            LDR              r0,[r0,#0x00]
   37 00000016 F040 0010       ORR              r0,r0,#0x10
   38 0000001A 492D            LDR              r1,=FLASH_ACR ; @0x080002D4
   39 0000001C 6008            STR              r0,[r1,#0x00]
   40 0000001E         ;1017:     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR
                       _LATENCY); 
   41 0000001E 4608            MOV              r0,r1
   42 00000020 6800            LDR              r0,[r0,#0x00]
   43 00000022 F020 0003       BIC              r0,r0,#0x03
   44 00000026 6008            STR              r0,[r1,#0x00]
   45 00000028         ;1018:     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2; 
                           
   46 00000028         ;1019:  
   47 00000028         ;1020:   
   48 00000028         ;1021:     /* HCLK = SYSCLK */ 
   49 00000028 4608            MOV              r0,r1
   50 0000002A 6800            LDR              r0,[r0,#0x00]
   51 0000002C F040 0002       ORR              r0,r0,#0x02
   52 00000030 6008            STR              r0,[r1,#0x00]
   53 00000032         ;5:                         RCC->CR |= 0x00030000;//Pll 
                       ON 
   54 00000032         ;6:            // while(!(RCC->CR & 0x20000))//hse ON
   55 00000032 4825            LDR              r0,=RCC_CR
   56 00000034 6800            LDR              r0,[r0,#0x00]
   57 00000036 F440 3080       ORR              r0,r0,#0x10000
   58 0000003A 4923            LDR              r1,=RCC_CR
   59 0000003C 6008            STR              r0,[r1,#0x00]
   60 0000003E         ;12:       RCC->CFGR |= 0x00000400;  //apb1 /2 DIVIDE 
   61 0000003E 4608            MOV              r0,r1
   62 00000040 6840            LDR              r0,[r0,#0x04]
   63 00000042 F440 6080       ORR              r0,r0,#0x400
   64 00000046 6048            STR              r0,[r1,#0x04]
   65 00000048         ;1054:     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_
                       PLLSRC | RCC_CFGR_PLLXTPRE | 
   66 00000048         ;1055:                                         RCC_CFGR_
                       PLLMULL)); 
   67 00000048 4608            MOV              r0,r1
   68 0000004A 6840            LDR              r0,[r0,#0x04]
   69 0000004C F420 107C       BIC              r0,r0,#0x3F0000
   70 00000050 6048            STR              r0,[r1,#0x04]
   71 00000052         ;10:       RCC->CFGR |= 0x001C0000;  //PLLMUL X9 
   72 00000052 4608            MOV              r0,r1
   73 00000054 6840            LDR              r0,[r0,#0x04]
   74 00000056 F440 10E0       ORR              r0,r0,#0x1C0000
   75 0000005A 6048            STR              r0,[r1,#0x04]
   76 0000005C         ;13:       RCC->CFGR |= 0x00000002; //PLL   System clock
                       
   77 0000005C         ;14:                          
   78 0000005C 4608            MOV              r0,r1
   79 0000005E 6840            LDR              r0,[r0,#0x04]
   80 00000060 F040 0002       ORR              r0,r0,#0x02
   81 00000064 6048            STR              r0,[r1,#0x04]
   82 00000066         ;10:       RCC->CFGR |= 0x001C0000;  //PLL entry clock s
                       ource
   83 00000066 4608            MOV              r0,r1
   84 00000068 6840            LDR              r0,[r0,#0x04]



ARM Macro Assembler    Page 3 


   85 0000006A F440 3080       ORR              r0,r0,#0x10000
   86 0000006E 6048            STR              r0,[r1,#0x04]
   87 00000070         ;  1060:     RCC->CR |= RCC_CR_PLLON; 
   88 00000070         ; 1061:  
   89 00000070         ; 1062:     /* Wait till PLL is ready */ PLLON: PLL enab
                       le
   90 00000070 4608            MOV              r0,r1
   91 00000072 6800            LDR              r0,[r0,#0x00]
   92 00000074 F040 7080       ORR              r0,r0,#0x1000000
   93 00000078 6008            STR              r0,[r1,#0x00]
   94 0000007A         ;11:       RCC->CFGR |= 0x00000080;  //ahb prescaler 
   95 0000007A         ;            MOV      r0,r1
   96 0000007A         ;             LDR      r0,[r0,#0x04]
   97 0000007A         ;             ORR      r0,r0,#0x90
   98 0000007A         ;              STR      r0,[r1,#0x04]
   99 0000007A         ;*******************************************************
                       **********************CLOCK CONFIGURATION 72MHZ 
  100 0000007A         
  101 0000007A         ;*******************************************************
                       **********************TIMER CONFIGURATION  
  102 0000007A         ;        __disable_irq(); 
  103 0000007A B672            CPSID            I
  104 0000007C         ;         RCC->APB1ENR =0x1;// timer2 aktif 
  105 0000007C F04F 0001       MOV              r0,#0x1
  106 00000080 4911            LDR              r1,=RCC_APB1ENR
  107 00000082 61C8            STR              r0,[r1,#0x1C]
  108 00000084         ;        TIM2->ARR = 0xffff;  
  109 00000084 F64F 70FF       MOV              r0,#0xFFFF
  110 00000088 F04F 4180       LDR              r1,=TIM2_ARR
  111 0000008C 62C8            STR              r0,[r1,#0x2C]
  112 0000008E         ;         TIM2->PSC = 54;             10HZ BLINK
  113 0000008E F04F 0036       MOV              r0,#54
  114 00000092 6288            STR              r0,[r1,#0x28]
  115 00000094         ;        TIM2->DIER = 0x1; 
  116 00000094 F04F 0001       MOV              r0,#0x1
  117 00000098 60C8            STR              r0,[r1,#0x0C]
  118 0000009A         ;         TIM2->CR1 = 0x1;  
  119 0000009A F04F 0001       MOV              r0,#0x1
  120 0000009E 6008            STR              r0,[r1,#0x00]
  121 000000A0         ;*******************************************************
                       **********************TIMER CONFIGURATION        
  122 000000A0         ;        NVIC_EnableIRQ(TIM2_IRQn); //TIMx_CR1.CEN 
  123 000000A0         ;*******************************************************
                       **********************INTERRUPT CONFIGURATION           
                                
  124 000000A0 F04F 001C       MOV              r0,#0x1C
  125 000000A4         ;   if ((int32_t)(IRQn) >= 0) 
  126 000000A4         ;   {      
  127 000000A4 2800            CMP              r0,#0x00
  128 000000A6 DB0A            BLT              SKIP        ;
  129 000000A8 F000 021F       AND              r2,r0,#0x1F
  130 000000AC F04F 0101       MOV              r1,#0x01
  131 000000B0 4091            LSLS             r1,r1,r2
  132 000000B2 0942            LSRS             r2,r0,#5
  133 000000B4 0092            LSLS             r2,r2,#2
  134 000000B6 F102 22E0       ADD              r2,r2,#0xE000E000
  135 000000BA F8C2 1100       STR              r1,[r2,#0x100]
  136 000000BE BF00    SKIP    NOP
  137 000000C0         ;         __enable_irq();



ARM Macro Assembler    Page 4 


  138 000000C0         
  139 000000C0 B662            CPSIE            I
  140 000000C2         ;*******************************************************
                       **********************INTERRUPT CONFIGURATION       
  141 000000C2         ;         while(1) 
  142 000000C2         
  143 000000C2         ;     23:         TIM2->SR =0x0;//interrupt FLAG ON
  144 000000C2         ;BL TIM2_IRQHandler
  145 000000C2         
  146 000000C2 E7FE    while   B                while
  147 000000C4                 ALIGN
  148 000000C4                 END
              20000260 
              40021000 
              40010800 
              40022000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --depend=.\ob
jects\dosya2.d -o.\objects\dosya2.o -I.\RTE\_Target_1 -IC:\Users\doguk\AppData\
Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\
Include --predefine="__UVISION_VERSION SETA 529" --predefine="STM32F10X_MD SETA
 1" --list=.\listings\dosya2.lst dosya2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Bolum3 00000000

Symbol: Bolum3
   Definitions
      At line 17 in file dosya2.s
   Uses
      None
Comment: Bolum3 unused
SKIP 000000BE

Symbol: SKIP
   Definitions
      At line 136 in file dosya2.s
   Uses
      At line 128 in file dosya2.s
Comment: SKIP used once
_main 00000000

Symbol: _main
   Definitions
      At line 21 in file dosya2.s
   Uses
      At line 20 in file dosya2.s
Comment: _main used once
while 000000C2

Symbol: while
   Definitions
      At line 146 in file dosya2.s
   Uses
      At line 146 in file dosya2.s
Comment: while used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FLASH_ACR 40022000

Symbol: FLASH_ACR
   Definitions
      At line 15 in file dosya2.s
   Uses
      At line 35 in file dosya2.s
      At line 38 in file dosya2.s

GPIOA_CRL 40010800

Symbol: GPIOA_CRL
   Definitions
      At line 3 in file dosya2.s
   Uses
      At line 29 in file dosya2.s
Comment: GPIOA_CRL used once
GPIOA_IDR 40010808

Symbol: GPIOA_IDR
   Definitions
      At line 1 in file dosya2.s
   Uses
      None
Comment: GPIOA_IDR unused
GPIOA_ODR 4001080C

Symbol: GPIOA_ODR
   Definitions
      At line 5 in file dosya2.s
   Uses
      None
Comment: GPIOA_ODR unused
GPIOB_IDR 40010C08

Symbol: GPIOB_IDR
   Definitions
      At line 4 in file dosya2.s
   Uses
      None
Comment: GPIOB_IDR unused
RCC_APB1ENR 40021000

Symbol: RCC_APB1ENR
   Definitions
      At line 7 in file dosya2.s
   Uses
      At line 106 in file dosya2.s
Comment: RCC_APB1ENR used once
RCC_APB2ENR 40021000

Symbol: RCC_APB2ENR
   Definitions
      At line 6 in file dosya2.s
   Uses
      At line 25 in file dosya2.s
Comment: RCC_APB2ENR used once
RCC_CFGR 40021000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: RCC_CFGR
   Definitions
      At line 14 in file dosya2.s
   Uses
      None
Comment: RCC_CFGR unused
RCC_CR 40021000

Symbol: RCC_CR
   Definitions
      At line 13 in file dosya2.s
   Uses
      At line 55 in file dosya2.s
      At line 58 in file dosya2.s

TIM2_ARR 40000000

Symbol: TIM2_ARR
   Definitions
      At line 8 in file dosya2.s
   Uses
      At line 110 in file dosya2.s
Comment: TIM2_ARR used once
TIM2_CR1 40000000

Symbol: TIM2_CR1
   Definitions
      At line 11 in file dosya2.s
   Uses
      None
Comment: TIM2_CR1 unused
TIM2_DIER 40000000

Symbol: TIM2_DIER
   Definitions
      At line 10 in file dosya2.s
   Uses
      None
Comment: TIM2_DIER unused
TIM2_PSC 40000028

Symbol: TIM2_PSC
   Definitions
      At line 9 in file dosya2.s
   Uses
      None
Comment: TIM2_PSC unused
TIM2_SR 40000000

Symbol: TIM2_SR
   Definitions
      At line 12 in file dosya2.s
   Uses
      None
Comment: TIM2_SR unused
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TIM2_IRQHandler 00000000

Symbol: TIM2_IRQHandler
   Definitions
      At line 19 in file dosya2.s
   Uses
      None
Comment: TIM2_IRQHandler unused
1 symbol
353 symbols in table
